#!/usr/bin/env bash

DEFAULT_DIR="." # use current directory by default
DIR=${1:-$DEFAULT_DIR}
DIR="$(realpath $DIR)"
PLUGIN_NAME="$(basename $DIR)"
TMP_DIR="/tmp/wp-plugin/$PLUGIN_NAME"
DEST_DIR="wp-build"

clear >$(tty)

mkdir -p "$(dirname $TMP_DIR)"
rm -rf $TMP_DIR
echo "Copying plugin files to $TMP_DIR..."
cp -R $DIR $TMP_DIR
cd $TMP_DIR

# PHP syntax checker
echo "Checking PHP syntax..."
find . -type f -name '*.php' ! -path './vendor/*' -print0 | while read -d $'\0' file
do
	output=$(php -l "$file")
	if [ ! $? -eq 0 ]; then
		#echo "$output"
		echo -e "\e[31mPHP Syntax Error!\e[0m"
		exit 1
	fi
done

if [ ! $? -eq 0 ]; then
	exit 1
fi

# call composer install
if [ -f 'composer.json' ]; then
	echo "Installing composer dependencies..."
	composer install --no-dev
fi

# call npm install
if [ -f 'package.json' ]; then
	echo "Installing NPM dependencies..."
	npm install
fi

echo "Erasing development files..."

# delete some dev files
rm -rf ./.git
rm -rf ./.editorconfig
rm -rf ./.gitignore
rm -rf ./node_modules
rm -rf ./package-lock.json
rm -rf ./composer.lock
rm -rf ./release
rm -rf "./$DEST_DIR"

# find and delete all zip files
find $TMP_DIR -name "*.zip" -type f -delete

# find and delete all source maps
find "$TMP_DIR/assets" -name "*.map" -type f -delete

# build the zip file
echo "Creating zip file..."
mkdir -p "$DIR/$DEST_DIR"
rm -rf "$DIR/$DEST_DIR/$PLUGIN_NAME.zip" # erase any old build
cd ..
zip -r "$DIR/$DEST_DIR/$PLUGIN_NAME.zip" "$PLUGIN_NAME" #zip tmp dir

# erase tmp dir
rm -rf $TMP_DIR

echo "Zip file created in $DIR/$DEST_DIR/$PLUGIN_NAME.zip"
